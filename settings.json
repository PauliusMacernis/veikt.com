{
  "markers": {
    "begin": {
      "file-name": "BEGIN",
      "description": "The marker-file marking the start of the download ~transaction. The file contains the hash of downloading process (first line) and the datetime when created (second line)"
    },
    "content": {
      "file-name": "CONTENT.LOG",
      "description": "The marker-file marking the content downloaded. The file contains list of directories in where all the downloaded content were saved to. Items in the list are separated by the unix-type new line character."
    },
    "end": {
      "file-name": "END",
      "description": "The marker-file marking the end of the download ~transaction. This marker will not be created if the process of downloading the content failed. The file contains the hash of downloading process (first line - must be the same as in BEGIN marker) and the datetime when created (second line)."
    }
  },
  "files-to-output":{
    "browser_id": {
      "description":"Created by default. Unique ID of the browsing-listing process.",
      "example-content":"Browser58631572eed919.54323357",
      "required":"1"
    },
    "datetime":{
      "description":"Created by default. When the job information has been downloaded? The datetime value is in UTC+0 timezone and is formatted as the string YYYY-MM-DD HH:mm:ss.",
      "example-content":"2016-09-30 14:30:59",
      "required":"1"
    },
    "project":{
      "description":"Created by default. The name of the project.",
      "example-content":"ca.indeed.com",
      "required":"1"
    },
    "url":{
      "description":"Created by default. This file contains the root URL of the project. However, let's keep in mind that huge organizations and/or huge projects exists and so then the main domain is sometimes being divided into smaller parts - subdomains or local TLDs. For example, this could be named as the big project - https://www.indeed.com/, and smaller parts of it - http://ca.indeed.com/ , https://de.indeed.com/ , http://www.indeed.jobs/ , ... At such case we would use smaller. However, in the particular case of indeed, https://www.indeed.com/ means the project of US and so we will not find the subdomain like that: https://us.indeed.com/ . That's why in the case of indeed https://www.indeed.com/ is ok to be used. The main take-away point here is - research a little on the project before picking the URL.",
      "example-content":"http://ca.indeed.com/",
      "required":"1"
    },
    "id":{
      "description":"Created by default. This file contains the unique string representing the unique ID of the job posting within the scope of the project (analyzing job board) itself.",
      "example-content":"57bb2f716820a6da",
      "required":"1"
    },
    "content_static":{
      "description":"NOT created by default. This is the file in which you put the content of the job posting. Lets put it as found in the web - HTML, XML, JSON, any format is ok. Just be sure the content of this file does not include any dynamic data like: random banners, randomly generated tokens, hashed attributes of tags and other always changing goodies. Think about it like that - the content of this file should be exactly the same after grabbing the content again. If the content of this file is changed then it means that the job posting is changed too. The content of the file is not meant to be valid HTML, XML or other. However, you have to think in front - you prepare the data for extracting. Which means we will want to extract the specific data out of this file later, for example: City, Salary, Company name, Company e-mail, etc. If you see that adding some extra tags would make sense and so the job for the content extractor will be easier then go for it!",
      "example-content":"<div style=\"padding:20px;\"><h1>example job</h1><br>Requirements<ul><li class=\"requirement\">Requirement1</li><li class=\"requirement\">Requirement2</li><li class=\"requirement\">Requirement3</li></ul></div>",
      "required":"1"
    },
    "content_dynamic":{
      "description":"NOT created by default. This file is required to be created, but the data inside of the file is not required. The data is about the same as content_static, but this time you are adding dynamic content of the job posting. Banners or generated tokens usually does not cary any information on job posting itself - that's why we skip them even here. However, some dynamic data do cary information on job posting itself, examples of such dynamic content-related data would be: Job posting view statistics, Amount of applicants, etc. Again, put this dynamic information within tags or somehow - make it easily extractable later.",
      "example-content":"<h1>Statistics</h1><br>Applicants: <span id=\"applicants\">1</span><ul><li>Page views: <span id=\"applicants\">1565</span></div>",
      "required":"1"
    }
  },
  "content-to-extract-from-files": {
    "file_browser_id":{
      "description":"Extracted by default. The content from the file named 'browser_id'.",
      "example-content":"Browser58631572eed919.54323357",
      "database-table": "job",
      "database-column": "file_browser_id",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    },
    "file_datetime":{
      "description":"Extracted by default. The content from the file named 'datetime'.",
      "example-content":"2016-09-30 14:30:59",
      "database-table": "job",
      "database-column": "file_datetime",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    },
    "file_project":{
      "description":"Extracted by default. The content from the file named 'project'.",
      "example-content":"ca.indeed.com",
      "database-table": "job",
      "database-column": "file_project",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "1"
    },
    "file_url":{
      "description":"Extracted by default. The content from the file named 'url'. This url is pointing to the particular job posting.",
      "example-content":"http://ca.indeed.com/",
      "database-table": "job",
      "database-column": "file_url",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    },
    "file_id":{
      "description":"Extracted by default. The content from the file named 'id'.",
      "example-content":"57bb2f716820a6da",
      "database-table": "job",
      "database-column": "file_id",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "1"
    },
    "file_content_static":{
      "description":"Extracted by default as HTML. The content from the file named 'content_static'.",
      "example-content":"<div style=\"padding:20px;\"><h1>example job</h1><br>Requirements<ul><li class=\"requirement\">Requirement1</li><li class=\"requirement\">Requirement2</li><li class=\"requirement\">Requirement3</li></ul></div>",
      "database-table": "job",
      "database-column": "file_content_static",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    },
    "file_content_dynamic":{
      "description":"Extracted by default as HTML. The content from the file named 'content_dynamic'.",
      "example-content":"<h1>Statistics</h1><br>Applicants: <span id=\"applicants\">1</span><ul><li>Page views: <span id=\"applicants\">1565</span></div>",
      "database-table": "job",
      "database-column": "file_content_dynamic",
      "database-column-id": "id",
      "required":"0",
      "is-identity-component": "0"
    },


    "datetime_imported":{
      "description":"Extracted by default. Datetime value for everyone to know when the job information has been synced with the database. datetime_imported could be named as datetime_ping to clarify the meaning, but lets stick with datetime_imported name. The datetime value should be in UTC+0 timezone and should be formatted as the string YYYY-MM-DD HH:mm:ss",
      "example-content":"2016-09-30 14:30:59",
      "database-table": "job",
      "database-column": "datetime_imported",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    },
    "datetime_updated":{
      "description":"Extracted as file_datetime value by default. file_datetime and datetime_updated holds the same value for now. However, looking for the future - it should be made possible to edit-extend part of the downloaded information and so file_datetime and datetime_updated will differ after/if edit-extend action would be performed.",
      "example-content":"2016-09-30 14:30:59",
      "database-table": "job",
      "database-column": "datetime_updated",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    },
    "content_static_without_tags":{
      "description":"Extracted by default as HTML (stripped by strip_tags function of PHP). The content is the same as in content_static file, but without any HTML, XML, CSS or other tags mixed in. It is the plain text of job posting - for humans to read. Our search engine likes this text as well.",
      "database-table": "job",
      "database-column": "content_static_without_tags",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    },
    "content_dynamic_without_tags": {
      "description":"Extracted by default as HTML (stripped by strip_tags function of PHP). The content is the same as in content_dynamic file, but without any HTML, XML, CSS or other tags mixed in. It is the plain text of job posting - for humans to read.",
      "database-table": "job",
      "database-column": "content_dynamic_without_tags",
      "database-column-id": "id",
      "required":"0",
      "is-identity-component": "0"
    },
    "is_published": {
      "description":"Extracted as 1 (true) by default.",
      "database-table": "job",
      "database-column": "is_published",
      "database-column-id": "id",
      "required":"1",
      "is-identity-component": "0"
    }
  },
  "projects-on": [
    {
      "project_name": "cvbankas.lt",
      "since_datetime_utc0": "2016-10-15 03:45:00",
      "language": "php",
      "url": "http://www.cvbankas.lt/",
      "unique_project_path": "code/php/project/cvbankas/lt",
      "entrance_sh_download": "download/code/php/project/cvbankas/lt/entrance.sh",
      "entrance_sh_normalize": "normalize/code/php/project/cvbankas/lt/entrance.sh",
      "dir_downloaded_posts": "download/downloads/cvbankas/lt/posts",
      "dir_downloaded_logs": "download/downloads/cvbankas/lt/logs",
      "file_downloaded_logs": "Y-m-d--H-i-s",
      "administrators": {
        "Paulius": {
          "name": "Paulius",
          "email": "sugalvojau@gmail.com",
          "website": "http://portfolio.vertyb.es/"
        }
      }
    }
  ]
}